/*
 * Api napisan u swageru
 *
 * Kalkulator api za računanje cijene struje
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class RezultatiApiController : Controller
    { 

        /// <summary>
        /// Dohvaća rezultate izračunate struje
        /// </summary>
        /// <remarks></remarks>
        /// <param name="uid">Id of the user that wants his information</param>
        /// <response code="200">API varaca niz rezultata</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/api/results/{uid}")]
        public virtual IActionResult ResultsUidGet([FromRoute]string uid)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Rezultati>>(exampleJson)
            : default(List<Rezultati>);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Dodaje novi zapis u tablicu rezultata
        /// </summary>
        /// <remarks></remarks>
        /// <param name="uid">Id korisnika koji želi pristup podatcima</param>
        /// <param name="body">Rezultati objekt koji se dodaje u tablicu rezultata</param>
        /// <response code="200">API returns success</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/api/results/{uid}")]
        public virtual void ResultsUidPost([FromRoute]string uid, [FromBody]Rezultati body)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// Ažurira postojeći zapis u tablici rezultata rezultata
        /// </summary>
        /// <remarks></remarks>
        /// <param name="uid">Id of the user that wants his information</param>
        /// <param name="body">Rezultati objekt koji se dodaje u tablicu rezultata</param>
        /// <response code="200">API returns success</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="500">Internal server error</response>
        [HttpPut]
        [Route("/api/results/{uid}")]
        public virtual void ResultsUidPut([FromRoute]string uid, [FromBody]Rezultati body)
        { 
            throw new NotImplementedException();
        }
    }
}
